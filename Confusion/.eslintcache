[{"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\index.js":"1","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\App.js":"2","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\registerServiceWorker.js":"3","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\MainComponent.js":"4","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\redux\\configureStore.js":"5","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\DishDetailComponent.js":"6","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\HomeComponent.js":"7","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\MenuComponent.js":"8","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\ContactComponent.js":"9","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\HeaderComponent.js":"10","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\FooterComponent.js":"11","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\redux\\ActionCreators.js":"12","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\AboutComponent.js":"13","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\redux\\dishes.js":"14","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\redux\\comments.js":"15","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\redux\\promotions.js":"16","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\redux\\leaders.js":"17","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\redux\\forms.js":"18","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\LoadingComponent.js":"19","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\redux\\actionTypes.js":"20","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\shared\\baseUrl.js":"21"},{"size":397,"mtime":1608028859654,"results":"22","hashOfConfig":"23"},{"size":532,"mtime":1608028859432,"results":"24","hashOfConfig":"23"},{"size":4384,"mtime":1608028859696,"results":"25","hashOfConfig":"23"},{"size":4081,"mtime":1608028860039,"results":"26","hashOfConfig":"23"},{"size":740,"mtime":1608028860259,"results":"27","hashOfConfig":"23"},{"size":7186,"mtime":1608028859832,"results":"28","hashOfConfig":"23"},{"size":1925,"mtime":1608028859960,"results":"29","hashOfConfig":"23"},{"size":1963,"mtime":1608028860075,"results":"30","hashOfConfig":"23"},{"size":7875,"mtime":1608028859785,"results":"31","hashOfConfig":"23"},{"size":5112,"mtime":1608043822481,"results":"32","hashOfConfig":"23"},{"size":2589,"mtime":1608028859870,"results":"33","hashOfConfig":"23"},{"size":6584,"mtime":1608028860150,"results":"34","hashOfConfig":"23"},{"size":4869,"mtime":1608028859746,"results":"35","hashOfConfig":"23"},{"size":606,"mtime":1608028860307,"results":"36","hashOfConfig":"23"},{"size":632,"mtime":1608028860221,"results":"37","hashOfConfig":"23"},{"size":624,"mtime":1608028860417,"results":"38","hashOfConfig":"23"},{"size":612,"mtime":1608028860383,"results":"39","hashOfConfig":"23"},{"size":161,"mtime":1608028860341,"results":"40","hashOfConfig":"23"},{"size":245,"mtime":1608028859999,"results":"41","hashOfConfig":"23"},{"size":540,"mtime":1608028860184,"results":"42","hashOfConfig":"23"},{"size":48,"mtime":1608028860467,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1e5ldf",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\index.js",[],["91","92"],"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\App.js",[],"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\registerServiceWorker.js",[],"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\MainComponent.js",[],"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\redux\\configureStore.js",[],"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\DishDetailComponent.js",["93","94","95"],"import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Row, Col, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nfunction RenderDish({ dish }) {\n    return (\n        <FadeTransform in transformProps={{\n            exitTransform: 'scale(0.5) translateY(-50%)'\n        }}>\n            <Card>\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                <CardBody>\n                    <CardTitle>{dish.name}</CardTitle>\n                    <CardText>{dish.description}</CardText>\n                </CardBody>\n            </Card>\n        </FadeTransform>\n    );\n}\n\nfunction RenderComments({ comments, postComment, dishId }) {\n    var commentList = comments.map(comment => {\n        return (\n            <Fade in>\n                <li key={comment.id} >\n                    {comment.comment}\n                    <br /><br />\n                    -- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}\n                    <br /><br />\n                </li>\n            </Fade>\n        );\n    });\n\n    return (\n        <div>\n            <h4>Comments</h4>\n            <ul className=\"list-unstyled\">\n                <Stagger in>\n                    {commentList}\n                </Stagger>\n            </ul>\n            <CommentForm dishId={dishId} postComment={postComment} />\n        </div>\n    );\n}\n\nconst DishDetail = props => {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dish) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderDish dish={props.dish} />\n                    </div>\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderComments comments={props.comments} postComment={props.postComment} dishId={props.dish.id} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default DishDetail;\n\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nexport class CommentForm extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isModalOpen: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({ isModalOpen: !this.state.isModalOpen });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    render() {\n        return (\n            <div>\n                <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-pencil fa-lg\"> Submit comment</span>\n                </Button>\n\n                <div className=\"row row-content\">\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                        <ModalHeader toggle={this.toggleModal}> Submit comment</ModalHeader>\n                        <ModalBody>\n                            <div className=\"col-12 col-md-9\">\n                                <LocalForm onSubmit={(values) => this.handleSubmit(values)} >\n                                    <Row className=\"form-group\">\n                                        <Label htmlFor=\"rating\">Rating</Label>\n                                        <Col md={10}>\n                                            <Control.select model=\".rating\" name=\"rating\" className=\"form-control\" >\n                                                <option>1</option>\n                                                <option>2</option>\n                                                <option>3</option>\n                                                <option>4</option>\n                                                <option>5</option>\n                                            </Control.select>\n                                        </Col>\n                                    </Row>\n\n                                    <Row className=\"form-group\">\n                                        <Label htmlFor=\"author\" md={2}>Your name</Label>\n                                        <Col md={10}>\n                                            <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Author\" className=\"form-control\" validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }} />\n                                            <Errors className=\"text-danger\" model=\".author\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 3 characters', maxLength: 'Must be 15 charaters or less' }} />\n                                        </Col>\n                                    </Row>\n\n                                    <Row className=\"form-group\">\n                                        <Label htmlFor=\"feedback\" md={2}>Your feedback</Label>\n                                        <Col md={10}>\n                                            <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows=\"6\" className=\"form-control\" validators={{ required }} />\n                                            <Errors className=\"text-danger\" model=\".comment\" show=\"touched\" messages={{ required: 'Required' }} />\n                                        </Col>\n                                    </Row>\n\n                                    <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                                </LocalForm>\n                            </div>\n                        </ModalBody>\n                    </Modal>\n                </div>\n            </div>\n        );\n    }\n}","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\ContactComponent.js",["96","97","98","99","100","101","102","103"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        this.props.postFeedback(values);\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem>Contact us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us you feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values) }>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First name\" className=\"form-control\" validators={{ required, minLength:  minLength(3), maxLength: maxLength(15)}}  />\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 2 characters', maxLength: 'Must be 15 charaters or less'}} />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last name\" className=\"form-control\" validators={{ required, minLength:  minLength(3), maxLength: maxLength(15)}} />\n                                    <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 2 characters', maxLength: 'Must be 15 charaters or less'}} />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. number\" className=\"form-control\" validators={{ required, minLength:  minLength(3), maxLength: maxLength(15), isNumber}} />\n                                    <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 2 characters', maxLength: 'Must be 15 charaters or less', isNumber: 'Must be a number'}} />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\" className = \"form-control\" validators={{ required, validEmail}} />\n                                    <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{ required: 'Required', validEmail: 'Invalid email address'}} />\n                                </Col>\n                            </Row>\n\n\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 6, offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label>\n                                            <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\" /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{ size: 3, offset: 1 }}>\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\" >\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\" className=\"form-control\" />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type=\"submit\" color=\"primary\">Send feedback</Button>\n                                </Col>\n                            </Row>\n\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n\nexport default Contact;","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\redux\\ActionCreators.js",[],"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\AboutComponent.js",["104"],"import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nfunction About(props) {\n\n    const leaders = props.leaders.leaders.map(leader => {\n        return (\n            <RenderLeader leader={leader} />\n        );\n    });\n\n    function RenderLeader({ leader }) {\n        return (\n            <Fade in>\n                <Media tag=\"li\" key={leader.id} className=\"col-12 mt-5\" >\n                    <Media left middle>\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\n                    </Media>\n                    <Media body className=\"ml-5\">\n                        <Media heading>{leader.name}</Media>\n                        <p>{leader.designation}</p>\n                        <p>{leader.description}</p>\n                    </Media>\n                </Media>\n            </Fade>\n        );\n    }\n\n    function RenderLeaders() {\n\n        if (props.leaders.isLoading) {\n            return <Loading />;\n        }\n        else if (props.leaders.errMess) {\n            return (\n                <h4>{props.leaders.errMess}</h4>\n            );\n        }\n        else return (\n            <Media list>\n                <Stagger in>\n                    {leaders}\n                </Stagger>\n            </Media>\n        );\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <RenderLeaders />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\redux\\dishes.js",[],"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\redux\\comments.js",[],"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\redux\\promotions.js",[],"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\redux\\leaders.js",[],"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\redux\\forms.js",[],"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\components\\LoadingComponent.js",[],"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\redux\\actionTypes.js",[],"C:\\Users\\PRANAV\\Desktop\\Project\\confusion\\src\\shared\\baseUrl.js",[],["105","106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":148,"column":45,"nodeType":"113","endLine":148,"endColumn":117},{"ruleId":"111","severity":1,"message":"114","line":161,"column":45,"nodeType":"113","endLine":161,"endColumn":226},{"ruleId":"111","severity":1,"message":"115","line":169,"column":45,"nodeType":"113","endLine":169,"endColumn":170},{"ruleId":"116","severity":1,"message":"117","line":59,"column":29,"nodeType":"113","endLine":59,"endColumn":71},{"ruleId":"111","severity":1,"message":"114","line":73,"column":37,"nodeType":"113","endLine":73,"endColumn":232},{"ruleId":"111","severity":1,"message":"114","line":81,"column":37,"nodeType":"113","endLine":81,"endColumn":227},{"ruleId":"111","severity":1,"message":"114","line":89,"column":37,"nodeType":"113","endLine":89,"endColumn":233},{"ruleId":"111","severity":1,"message":"114","line":97,"column":37,"nodeType":"113","endLine":97,"endColumn":176},{"ruleId":"111","severity":1,"message":"118","line":107,"column":45,"nodeType":"113","endLine":107,"endColumn":122},{"ruleId":"111","severity":1,"message":"112","line":113,"column":37,"nodeType":"113","endLine":113,"endColumn":119},{"ruleId":"111","severity":1,"message":"115","line":123,"column":37,"nodeType":"113","endLine":123,"endColumn":137},{"ruleId":"119","severity":1,"message":"120","line":6,"column":10,"nodeType":"121","messageId":"122","endLine":6,"endColumn":23},{"ruleId":"107","replacedBy":"123"},{"ruleId":"109","replacedBy":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'FadeTransform' is defined but never used.","Identifier","unusedVar",["125"],["126"],"no-global-assign","no-unsafe-negation"]